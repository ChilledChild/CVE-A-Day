import datetime
import random
import tweepy

consumer_key = "xxxxxxxxxxxxxxxx"
consumer_secret = "xxxxxxxxxxxxxxxx"
access_token = "xxxxxxxxxxxxxxxx"
access_token_secret = "xxxxxxxxxxxxxxxx"
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)
timestamp = datetime.now()
web_link = "https://cve.mitre.org/cgi-bin/cvename.cgi?name="
logger = open('history_log.txt', 'a')
tweeted = open('tweeted_cve.txt', 'a')


def check_if_string_in_file(file_name, string_to_search):
    with open(file_name, 'r') as read_obj:
        for line in read_obj:
            if string_to_search in line:
                return string_to_search
    return False


def random_line(file_name):
    lines = open(file_name).read().splitlines()
    return random.choice(lines)


cve_entry = random_line('allitems.csv')
cve_id = cve_entry[0]
cve_description = cve_entry[2]
cve_link = web_link + cve_id
tweet_head = cve_id + ":\n" + cve_description
tweet_tail = "Learn more: " + cve_link


def tweet_cve():
    logger.write(timestamp + "Attempting to tweet " + cve_id)
    api.update_status(tweet_head)
    tweet_head_id = api.user_timeline(user_id=cve_daily, count=1)
    api.update_status(tweet_tail, in_reply_to_status_id=tweet_head_id, auto_populate_reply_metadata=True)

    if cve_id in tweet_head_id:
        logger.write(timestamp + cve_id + "Successfully tweeted!")
        tweeted.write(cve_id)
    else:
        api.send_direct_message(recipient_id=_cyberchild, text=("Cannot validate tweet" + cve_id))
        logger.write(timestamp + "Cannot validate tweet" + cve_id)


def cve_search():
    if "** RESERVED **" in cve_description:
        logger.write(timestamp + cve_id + " is reserved. Trying another CVE...", 'a')
        finder()
    else:
        logger.write(timestamp + "Creating tweet for" + cve_id, 'a')
        tweet_cve()


def finder():
    if check_if_string_in_file('tweeted_cve.txt', cve_id):
        logger.write(timestamp + cve_id + " has already been tweeted. Trying again...", 'a')
        finder()
    else:
        logger.write(timestamp + cve_id + " has not been tweeted. Searching details...", 'a')
        cve_search()


finder()
